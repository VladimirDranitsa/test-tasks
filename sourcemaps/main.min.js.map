{"version":3,"sources":["01_main.js"],"names":["daysInHtml","document","querySelector","hoursInHtml","minutesInHtml","secondsInHtml","finalDate","Date","countingTime","currentDate","numberOfMillisec","numberOfDays","Math","floor","numberOfHours","numberOfMinutes","numberOfSeconds","textContent","setInterval","EMAIL_REGEXP","input","onInput","isEmailValid","value","style","outline","test","addEventListener","form","popup","popupMassage","popupText","htmlBody","submitForm","async","e","preventDefault","body","email","fetch","method","JSON","stringify","headers","Content-Type","ok","reset","display","overflow","innerHTML","elem","target","classList","contains"],"mappings":"AAAA,MAAMA,WAAaC,SAASC,cAAc,uBACpCC,YAAcF,SAASC,cAAc,wBACrCE,cAAgBH,SAASC,cAAc,0BACvCG,cAAgBJ,SAASC,cAAc,0BAEvCI,UAAY,IAAIC,KAAK,wBAErBC,aAAe,KACjB,MAAMC,EAAc,IAAIF,KACxB,IAAIG,EAAmBJ,UAAYG,EAE/BE,EAAeC,KAAKC,MAAMH,EAAmB,IAAO,GAAK,GAAK,IAC9DI,EAAgBF,KAAKC,MAAMH,EAAmB,IAAO,GAAK,IAAM,GAChEK,EAAkBH,KAAKC,MAAMH,EAAmB,IAAO,IAAM,GAC7DM,EAAkBJ,KAAKC,MAAMH,EAAmB,KAAQ,GAExCV,WAAWiB,YAA/BN,EAAe,GAA8B,IAAMA,EAAwCA,EACtER,YAAYc,YAAjCH,EAAgB,GAA+B,IAAMA,EAA0CA,EACxEV,cAAca,YAArCF,EAAkB,GAAiC,IAAMA,EAA8CA,EAChFV,cAAcY,YAArCD,EAAkB,GAAiC,IAAMA,EAA8CA,GAG3GR,eACAU,YAAYV,aAAa,KAGzB,MAAMW,aAAe,8GACfC,MAAQnB,SAASC,cAAc,SAErC,SAASmB,UACDC,aAAaF,MAAMG,OACnBH,MAAMI,MAAMC,QAAU,kBAEtBL,MAAMI,MAAMC,QAAU,gBAM9B,SAASH,aAAaC,GAClB,OAAOJ,aAAaO,KAAKH,GAH7BH,MAAMO,iBAAiB,QAASN,SAMhC,MAAMO,KAAO3B,SAASC,cAAc,iBAC9B2B,MAAQ5B,SAASC,cAAc,UAC/B4B,aAAe7B,SAASC,cAAc,mBACtC6B,UAAY9B,SAASC,cAAc,gBACnC8B,SAAW/B,SAASC,cAAc,QAGlC+B,WAAaC,MAAOC,IACtBA,EAAEC,iBAEF,MAAMC,EAAO,CACTC,MAFalB,MAAMG,cAIFgB,MAAM,6CAA8C,CACjEC,OAAQ,OACRH,KAAMI,KAAKC,UAAUL,GACrBM,QAAS,CACLC,eAAgB,uBAGfC,IACTjB,KAAKkB,QACLjB,MAAML,MAAMuB,QAAU,OACtBf,SAASR,MAAMwB,SAAW,WAE1BpB,KAAKkB,QACLhB,aAAamB,UAAY,SACzBlB,UAAUkB,UAAY,wBACtBpB,MAAML,MAAMuB,QAAU,OACtBf,SAASR,MAAMwB,SAAW,WAIlCpB,KAAKD,iBAAiB,SAAWQ,GAAMF,WAAWE,IAClDN,MAAMF,iBAAiB,QAASuB,KACxBA,EAAKC,OAAOC,UAAUC,SAAS,UAAYH,EAAKC,OAAOC,UAAUC,SAAS,iBAAmBH,EAAKC,OAAOC,UAAUC,SAAS,oBAC5HxB,MAAML,MAAMuB,QAAU,OACtBf,SAASR,MAAMwB,SAAW","file":"../js/main.min.js","sourcesContent":["const daysInHtml = document.querySelector('.timer__amount-days')\nconst hoursInHtml = document.querySelector('.timer__amount-hours')\nconst minutesInHtml = document.querySelector('.timer__amount-minutes')\nconst secondsInHtml = document.querySelector('.timer__amount-seconds')\n\nconst finalDate = new Date('Jul 24 2023 00:00:00')\n\nconst countingTime = () => {\n    const currentDate = new Date()\n    let numberOfMillisec = finalDate - currentDate\n\n    let numberOfDays = Math.floor(numberOfMillisec / 1000 / 60 / 60 / 24)\n    let numberOfHours = Math.floor(numberOfMillisec / 1000 / 60 / 60) % 24\n    let numberOfMinutes = Math.floor(numberOfMillisec / 1000 / 60) % 60\n    let numberOfSeconds = Math.floor(numberOfMillisec / 1000) % 60\n\n    numberOfDays < 10 ? daysInHtml.textContent = '0' + numberOfDays : daysInHtml.textContent = numberOfDays\n    numberOfHours < 10 ? hoursInHtml.textContent = '0' + numberOfHours : hoursInHtml.textContent = numberOfHours\n    numberOfMinutes < 10 ? minutesInHtml.textContent = '0' + numberOfMinutes : minutesInHtml.textContent = numberOfMinutes\n    numberOfSeconds < 10 ? secondsInHtml.textContent = '0' + numberOfSeconds : secondsInHtml.textContent = numberOfSeconds\n}\n\ncountingTime()\nsetInterval(countingTime,1000)\n\n\nconst EMAIL_REGEXP = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu\nconst input = document.querySelector('input')\n\nfunction onInput() {\n    if (isEmailValid(input.value)) {\n        input.style.outline = '3px solid green'\n    } else {\n        input.style.outline = '3px solid red'\n    }\n}\n\ninput.addEventListener('input', onInput)\n\nfunction isEmailValid(value) {\n    return EMAIL_REGEXP.test(value)\n}\n\nconst form = document.querySelector('.footer__form')\nconst popup = document.querySelector('.popup')\nconst popupMassage = document.querySelector('.popup__massage')\nconst popupText = document.querySelector('.popup__text')\nconst htmlBody = document.querySelector('body')\n\n\nconst submitForm = async (e) => {\n    e.preventDefault()\n    let inputValue = input.value\n    const body = {\n        email: inputValue\n    }\n    let response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n            method: 'POST',\n            body: JSON.stringify(body),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n    if (response.ok) {\n        form.reset()\n        popup.style.display = 'flex'\n        htmlBody.style.overflow = 'hidden'\n    } else {\n        form.reset()\n        popupMassage.innerHTML = 'ERROR!'\n        popupText.innerHTML = 'An error has occurred'\n        popup.style.display = 'flex'\n        htmlBody.style.overflow = 'hidden'\n    }\n}\n\nform.addEventListener('submit', (e) => submitForm(e))\npopup.addEventListener('click',(elem) => {\n    if (elem.target.classList.contains('popup') || elem.target.classList.contains('popup__cross') || elem.target.classList.contains('popup__button')) {\n        popup.style.display = 'none'\n        htmlBody.style.overflow = 'visible'\n    }\n})"]}